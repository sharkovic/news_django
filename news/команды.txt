1. Создать двух пользователей (с помощью метода User.objects.create_user('username'))
user10 = User.objects.create_user("user10")
user20 = User.objects.create_user("user20")

2. Создать два объекта модели Author, связанные с пользователями.
author10 = Author.objects.create(name="author10", user=user10, rating=0)
author20 = Author.objects.create(name="author20", user=user20, rating=0)

3. Добавить 4 категории в модель Category.
humor = Category.objects.create(name_category = "Юмор")
sport = Category.objects.create(name_category = "Спорт")
economic = Category.objects.create(name_category = "Экономика")
culture = Category.objects.create(name_category = "Культура")

4.Добавить 2 статьи и 1 новость.
post1 = Post.objects.create(author=author10, area_post = 'Article', title_post = 'Заголовок статьи', text_post = 'Текст статьи')
post2 = Post.objects.create(author=author10, area_post = 'Article', title_post = 'Заголовок статьи2', text_post = 'Текст статьи2')
news1 = Post.objects.create(author=author20, area_post = 'News', title_post = 'Заголовок новости', text_post = 'Текст новости')
news2 = Post.objects.create(author=author20, area_post = 'News', title_post = 'Заголовок новости2', text_post = 'Текст новости2')

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
PostCategory.objects.create(category=humor, post=post1)
PostCategory.objects.create(category=sport, post=post1)
PostCategory.objects.create(category=economic, post=post2)
PostCategory.objects.create(category=culture, post=news1)

6.Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
comment1 = Comment.objects.create(post=post1, user=user10, text_comment = 'Комментарий пользователя user10')
comment2 = Comment.objects.create(post=post2, user=user20, text_comment = 'Комментарий пользователя user20')
comment3 = Comment.objects.create(post=news1, user=user20, text_comment = 'Комментарий пользователя user20')
comment4 = Comment.objects.create(post=news2, user=user20, text_comment = 'Комментарий пользователя user20')

7.Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
comment1.like()
comment1.like()
comment1.like()
post1.like()
post1.like()
post1.like()
comment2.like()
comment2.like()
comment2.like()
comment2.like()
comment2.like()
post2.like()
post2.like()
post2.like()
post2.like()
post2.like()
post2.dislike()
comment2.dislike()

8.Обновить рейтинги пользователей.

user10.author.update_rating()
user20.author.update_rating()

9.Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

a = Author.objects.order_by("-rating")[:1]
for i in a:
    i.user.username
    i.rating

10.Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

a = Post.objects.order_by("-rating_post")[:1]

for i in a:
    i.title_post
    i.preview()
    i.author.user.username
    i.rating_post
    i.date_of_creation

11.Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Post.objects.all().order_by('-rating_post')[0].comment_set.values("date_of_creation","user","rating_comment","text_comment")












